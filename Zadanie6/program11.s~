.intel_syntax noprefix
	
	.global main
	.text

main:
#	mov eax, [esp+8]
#	mov eax, [eax+4]
#	push eax
#	call atoi
#	add esp, 4

	mov eax, 4
	push eax
	call fib
	add esp, 4
	
	push eax
	mov ebx, offset messg
	push ebx
	call printf
	add esp, 8
	
	xor eax, eax
	ret

fib:
	cmp eax, 1
	je koniec
	dec eax
	push eax
	call fib
	pop ebx
	push eax
	mov eax, ebx
	dec eax
	call fib
	pop ecx
	add eax, ecx
	
koniec:
	ret
	
skok1:
	dec eax    #Zmniejszenie argumentu o 1 (n-1).
	push eax   #Wrzucenie pomniejszonego argumentu na stos.
	call fib   #Wywolanie funkcji z argumentem n-1.
	pop ebx    #Pobranie ze stosu
	push eax
	dec ebx
	push ebx
	call fib
	add esp,4
	pop ebx
	add eax,ebx
	ret

	.data

messg: .asciz "Wynik=%i\n"
